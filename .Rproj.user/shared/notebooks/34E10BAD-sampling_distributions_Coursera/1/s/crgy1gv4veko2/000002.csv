"0","shinyApp("
"0","  ui <- fluidPage("
"0","    "
"0","    # Sidebar with a slider input for number of bins "
"0","    sidebarLayout("
"0","      sidebarPanel("
"0","        "
"0","        selectInput(""selected_var"","
"0","                    ""Variable:"","
"0","                    choices = list(""area"", ""price""),"
"0","                    selected = ""area""),         "
"0","        "
"0","        numericInput(""n_samp"","
"0","                     ""Sample size:"","
"0","                     min = 1,"
"0","                     max = nrow(ames),"
"0","                     value = 30),"
"0","        "
"0","        numericInput(""n_sim"","
"0","                     ""Number of samples:"","
"0","                     min = 1,"
"0","                     max = 30000,"
"0","                     value = 15000) "
"0","        "
"0","      ),"
"0","      "
"0","      # Show a plot of the generated distribution"
"0","      mainPanel("
"0","        plotOutput(""sampling_plot""),"
"0","        verbatimTextOutput(""sampling_mean""),"
"0","        verbatimTextOutput(""sampling_se"")"
"0","      )"
"0","    )"
"0","  ),"
"0","  "
"0","  # Define server logic required to draw a histogram"
"0","  server <- function(input, output) {"
"0","    "
"0","    # create sampling distribution"
"0","    sampling_dist <- reactive({"
"0","      ames[[input$selected_var]] %>%"
"0","        sample(size = input$n_samp * input$n_sim, replace = TRUE) %>%"
"0","        matrix(ncol = input$n_samp) %>%"
"0","        rowMeans() %>%"
"0","        data.frame(x_bar = .)"
"0","      #ames %>%"
"0","      #  rep_sample_n(size = input$n_samp, reps = input$n_sim, replace = TRUE) %>%"
"0","      #  summarise_(x_bar = mean(input$selected_var))"
"0","    })"
"0","    "
"0","    # plot sampling distribution"
"0","    output$sampling_plot <- renderPlot({"
"0","      x_min <- quantile(ames[[input$selected_var]], 0.1)"
"0","      x_max <- quantile(ames[[input$selected_var]], 0.9)"
"0","      "
"0","      ggplot(sampling_dist(), aes(x = x_bar)) +"
"0","        geom_histogram() +"
"0","        xlim(x_min, x_max) +"
"0","        ylim(0, input$n_sim * 0.35) +"
"0","        ggtitle(paste0(""Sampling distribution of mean "", "
"0","                       input$selected_var, "" (n = "", input$n_samp, "")"")) +"
"0","        xlab(paste(""mean"", input$selected_var)) +"
"0","        theme(plot.title = element_text(face = ""bold"", size = 16))"
"0","    })"
"0","    "
"0","    # mean of sampling distribution"
"0","    output$sampling_mean <- renderText({"
"0","      paste0(""mean of sampling distribution = "", round(mean(sampling_dist()$x_bar), 2))"
"0","    })"
"0","    "
"0","    # mean of sampling distribution"
"0","    output$sampling_se <- renderText({"
"0","      paste0(""SE of sampling distribution = "", round(sd(sampling_dist()$x_bar), 2))"
"0","    })"
"0","  },"
"0","  "
"0","  options = list(height = 500) "
"0",")"
"2","
Listening on http://127.0.0.1:3911
"
